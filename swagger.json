{
  "openapi": "3.0.0",
  "info": {
    "title": "Pacific Clothing API",
    "version": "1.0.0",
    "description": "API for managing departments and employees with JWT authentication."
  },
  "servers": [
    {
      "url": "https://pacific-clothing-api.onrender.com"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string", "format": "password" }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered successfully" },
          "400": { "description": "Validation error or username already exists" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Log in an existing user and receive a JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "password": { "type": "string", "format": "password" }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login returns a JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT token to be used for authorization"
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user and invalidate JWT token",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "User logged out successfully" },
          "401": { "description": "Invalid or missing token" }
        }
      }
    },
    "/departments": {
      "get": {
        "summary": "Get all departments",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "A list of departments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Department" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new department",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DepartmentInput" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Department created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Department" }
              }
            }
          },
          "400": { "description": "Validation error" }
        }
      }
    },
    "/departments/{id}": {
      "put": {
        "summary": "Update a department by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DepartmentInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Department" }
              }
            }
          },
          "404": { "description": "Department not found" },
          "400": { "description": "Validation error" }
        }
      },
      "delete": {
        "summary": "Delete a department by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Department deleted successfully" },
          "404": { "description": "Department not found" }
        }
      }
    },
    "/employees": {
      "get": {
        "summary": "Get all employees",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "A list of employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Employee" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new employee",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmployeeInput" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employee created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Employee" }
              }
            }
          },
          "400": { "description": "Validation error or department ID is invalid" }
        }
      }
    },
    "/employees/{id}": {
      "put": {
        "summary": "Update an employee by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmployeeInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Employee" }
              }
            }
          },
          "404": { "description": "Employee not found" },
          "400": { "description": "Validation error" }
        }
      },
      "delete": {
        "summary": "Delete an employee by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Employee deleted successfully" },
          "404": { "description": "Employee not found" }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UserOutput" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserInput" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserOutput" }
              }
            }
          },
          "400": { "description": "Validation error or username already exists" }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "summary": "Update a user by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserOutput" }
              }
            }
          },
          "404": { "description": "User not found" },
          "400": { "description": "Validation error" }
        }
      },
      "delete": {
        "summary": "Delete a user by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "User deleted successfully" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/timelogs": {
      "get": {
        "summary": "Get all time logs",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "A list of time logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/TimeLog" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new time log",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TimeLogInput" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Time log created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TimeLog" }
              }
            }
          },
          "400": { "description": "Validation error or invalid employee ID" }
        }
      }
    },
    "/timelogs/{id}": {
      "put": {
        "summary": "Update a time log by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TimeLogInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Time log updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TimeLog" }
              }
            }
          },
          "404": { "description": "Time log not found" },
          "400": { "description": "Validation error" }
        }
      },
      "delete": {
        "summary": "Delete a time log by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Time log deleted successfully" },
          "404": { "description": "Time log not found" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "DepartmentInput": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" }
        },
        "required": ["name"]
      },
      "Department": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" }
        }
      },
      "EmployeeInput": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "age": { "type": "integer" },
          "department": { "type": "string" }
        },
        "required": ["name", "age", "department"]
      },
      "Employee": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "name": { "type": "string" },
          "age": { "type": "integer" },
          "department": { "$ref": "#/components/schemas/Department" }
        }
      },
      "UserInput": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string", "format": "password" }
        },
        "required": ["username", "password"]
      },
      "UserOutput": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "username": { "type": "string" }
        }
      },
      "TimeLogInput": {
        "type": "object",
        "properties": {
          "employee": { "type": "string" },
          "clockIn": { "type": "string", "format": "date-time" },
          "clockOut": { "type": "string", "format": "date-time", "nullable": true },
          "notes": { "type": "string", "nullable": true }
        },
        "required": ["employee", "clockIn"]
      },
      "TimeLog": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "employee": { "$ref": "#/components/schemas/Employee" },
          "clockIn": { "type": "string", "format": "date-time" },
          "clockOut": { "type": "string", "format": "date-time", "nullable": true },
          "notes": { "type": "string", "nullable": true }
        }
      }
    }
  },
  "tags": [
    { "name": "Auth", "description": "Authentication endpoints" },
    { "name": "Departments", "description": "Manage departments" },
    { "name": "Employees", "description": "Manage employees" },
    { "name": "Users", "description": "Manage users" },
    { "name": "Time Logs", "description": "Manage employee time logs" }
  ]
}
